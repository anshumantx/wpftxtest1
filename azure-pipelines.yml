# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net


trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'


stages:
- stage:
  jobs:
  - job : Initial_Build
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PublishSymbols@2
      inputs:
        SearchPattern: '**/bin/**/*.pdb'
        PublishSymbols: false

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)'
        Contents: '**\bin\$(BuildConfiguration)\**'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'


- stage :
  jobs:  
  - deployment: VMDeploy
    displayName: web
    environment:
      name:  winappAzureVM
      resourceType: VirtualMachine
      tags: AzureVM
    strategy: 
      runOnce:
          deploy:
            steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'specific'
                project: 'ab31445f-35fa-4f91-9afc-5968e3a8a4a1'
                definition: '20'
                buildVersionToDownload: 'latest'
                artifactName: 'WinApps.exe'
                targetPath: '$(Pipeline.Workspace)'